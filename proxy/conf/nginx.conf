#user  nobody;
worker_processes  1;

#error_log  logs/error.log;
#error_log  logs/error.log  notice;
#error_log  logs/error.log  info;

#pid        logs/nginx.pid;

# running mode of proxy: dev, prod
env PROXY_MODE;

events {
    worker_connections  1024;
}


http {
    include       mime.types;
    default_type  application/octet-stream;

    #log_format  main  '$remote_addr - $remote_user [$time_local] "$request" '
    #                  '$status $body_bytes_sent "$http_referer" '
    #                  '"$http_user_agent" "$http_x_forwarded_for"';

    #access_log  logs/access.log  main;

    sendfile        on;
    #tcp_nopush     on;

    #keepalive_timeout  0;
    keepalive_timeout  65;

    gzip  on;
    gzip_types application/json text/plain text/css application/x-javascript text/xml text/javascript;
    gzip_min_length 512;

    # set search paths for pure Lua external libraries (';;' is the default path):
    lua_package_path 'lib/resty/?.lua;lib/?.lua;lua/?.lua;;';

    # set search paths for Lua external libraries written in C (can also use ';;'):
    lua_package_cpath 'lib/?.so;;';
    
    # disable cache !!! only for dev
    lua_code_cache off;

    # delcare shared server cache
    lua_shared_dict scache 2m;

    # init server that: events
    init_worker_by_lua_file lua/init_worker.lua;
    
    # for persistent connection
    proxy_http_version 1.1;
    proxy_set_header Connection "";

    upstream sk.server{
        least_conn;

        server 192.168.99.100:9200;
        #server 192.168.10.14:80  down;
        #server 192.168.10.15:8009  max_fails=3  fail_timeout=20s;
        #server 192.168.10.16:8080 backup;

        keepalive 10;
    }

    server {
        listen       80;
        server_name  localhost;

        #charset koi8-r;

        #access_log  logs/host.access.log  main;

        location / {
            root   html;
            index  index.html index.htm;
        }

    	location = /api/v1/events {
            limit_except GET {
                deny all;
            }

	    	default_type application/json;
            access_by_lua_file lua/access_events.lua;
	    	content_by_lua_file lua/handle_events.lua;
        }
    	location = /api/v1/event {
            limit_except GET {
                deny all;
            }

	    	default_type application/json;
            access_by_lua_file lua/access_event.lua;
	    	content_by_lua_file lua/handle_event.lua;
        }
    	location = /api/v1/seckill {
            limit_except PUT {
                deny all;
            }

	    	default_type application/json;
            access_by_lua_file lua/access_seckill.lua;
            header_filter_by_lua_file lua/filter_seckill.lua;
            proxy_pass http://sk.server/mock/seckill;
        }

        # mockup for testing
        location = /mock/seckill {
            limit_except PUT {
                deny all;
            }

	    	default_type application/json;
	    	content_by_lua_file lua/handle_seckill.lua;
        }

#    	location ~* ^/v1/api/events/(\w+) {
            #default_type text/html;
            #access_by_lua_file lua/access-event.lua;
        #}

	    location /test {
	    	default_type application/json;
            access_by_lua_file lua/access_handle.lua;
            header_filter_by_lua_file lua/header_filter.lua;
	    	content_by_lua_file lua/test.lua;
	    }

        #error_page  404              /404.html;

        # redirect server error pages to the static page /50x.html
        #
        error_page   500 502 503 504  /50x.html;
        location = /50x.html {
            root   html;
        }

        # deny access to .htaccess files, if Apache's document root
        # concurs with nginx's one
        #
        #location ~ /\.ht {
        #    deny  all;
        #}
    }


    # another virtual host using mix of IP-, name-, and port-based configuration
    #
    #server {
    #    listen       8000;
    #    listen       somename:8080;
    #    server_name  somename  alias  another.alias;

    #    location / {
    #        root   html;
    #        index  index.html index.htm;
    #    }
    #}


    # HTTPS server
    #
    #server {
    #    listen       443 ssl;
    #    server_name  localhost;

    #    ssl_certificate      cert.pem;
    #    ssl_certificate_key  cert.key;

    #    ssl_session_cache    shared:SSL:1m;
    #    ssl_session_timeout  5m;

    #    ssl_ciphers  HIGH:!aNULL:!MD5;
    #    ssl_prefer_server_ciphers  on;

    #    location / {
    #        root   html;
    #        index  index.html index.htm;
    #    }
    #}

}
